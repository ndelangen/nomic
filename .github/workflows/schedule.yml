name: Schedule
on:
  schedule:
    - cron: '0 * * * *'

jobs:
  check-inactivity:
    runs-on: ubuntu-latest
    outputs:
      no_commits: ${{ steps.check_inactivity.outputs.no_commits }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
      - name: Check for inactivity
        id: check_inactivity
        run: |
          now=$(date +%s)
          last_commit_timestamp=$(git log -1 --format=%ct)
          difference=$((now - last_commit_timestamp))
          desired_inactivity_seconds=$(( $DESIRED_INACTIVITY_SECONDS + $DESIRED_INACTIVITY_MINUTES * 60 + $DESIRED_INACTIVITY_HOURS * 60 * 60 + $DESIRED_INACTIVITY_DAYS * 24 * 60 * 60 ))

          echo "Last commit was $difference seconds ago."
          echo "Desired inactivity is $desired_inactivity_seconds seconds."

          if [[ $difference -gt $desired_inactivity_seconds ]]; then
            echo "No commits within the desired inactivity seconds!"
            echo "skip=false" >> $GITHUB_OUTPUT
          else
            echo "Recent commit detected. Skipping script."
            echo "skip=true" >> $GITHUB_OUTPUT
          fi
        env:
          DESIRED_INACTIVITY_SECONDS: 0
          DESIRED_INACTIVITY_MINUTES: 0
          DESIRED_INACTIVITY_HOURS: 24
          DESIRED_INACTIVITY_DAYS: 0
  run:
    runs-on: ubuntu-latest
    needs: check-inactivity
    if: ${{ needs.check-inactivity.outputs.no_commits != 'true' }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
      - uses: oven-sh/setup-bun@v1
      - uses: denoland/setup-deno@v1
      - run: bun install --production
      - run: bun run schedule
      - run: git add .
      - run: |
          git config user.name ${{ github.actor }}
          git config user.email "github-actions@github.com"
          git commit -m "schedule [skip ci]"
          git push
