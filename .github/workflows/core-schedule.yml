name: Core - Schedule
on:
  schedule:
    - cron: '0 * * * *'

jobs:
  check-inactivity:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.check_inactivity.outputs.skip }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
      - name: Check for inactivity
        id: check_inactivity
        run: |
          now=$(date +%s)
          last_commit_timestamp=$(git log -1 --format=%ct)
          difference=$((now - last_commit_timestamp))
          desired_inactivity_seconds=$(( $DESIRED_INACTIVITY_SECONDS + $DESIRED_INACTIVITY_MINUTES * 60 + $DESIRED_INACTIVITY_HOURS * 60 * 60 + $DESIRED_INACTIVITY_DAYS * 24 * 60 * 60 ))

          echo "Last commit was $difference seconds ago."
          echo "Desired inactivity is $desired_inactivity_seconds seconds."

          if [[ $difference -gt $desired_inactivity_seconds ]]; then
            echo "No commits within the desired inactivity seconds!"
            echo "skip=false" >> $GITHUB_OUTPUT
          else
            echo "Recent commit detected. Skipping script."
            echo "skip=true" >> $GITHUB_OUTPUT
          fi
        env:
          DESIRED_INACTIVITY_SECONDS: 0
          DESIRED_INACTIVITY_MINUTES: 0
          DESIRED_INACTIVITY_HOURS: 24
          DESIRED_INACTIVITY_DAYS: 0
  run:
    runs-on: ubuntu-latest
    environment: safe
    needs: check-inactivity
    if: ${{ needs.check-inactivity.outputs.skip == 'false' }}
    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      - uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0
          persist-credentials: false
          token: ${{ steps.generate-token.outputs.token }}
      - uses: oven-sh/setup-bun@v1
      - uses: denoland/setup-deno@v1
      - run: bun install
      - run: bun run progress
      - name: Run core-yaml
        id: yaml-data
        uses: jbutcher5/read-yaml@main
        with:
          file: './state/core.yml'
          key-path: '["players", "active"]'
      - name: Get user email
        id: email-data
        uses: ndelangen/email-by-username-action@main
        continue-on-error: true
        with:
          github-username: ${{ steps.yaml-data.outputs.data }}
          token: ${{ steps.generate-token.outputs.token }}
      - name: Commit changes
        run: |
          git config --local user.name ${{ steps.yaml-data.outputs.data }}
          git config --local user.email ${{ steps.email-data.outputs.email || 'github-action@gihub.com' }}
          git commit -a --allow-empty -m "new active player = ${{ steps.yaml-data.outputs.data }} [schedule] by ${{ github.actor }} [skip ci]"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ steps.generate-token.outputs.token }}
